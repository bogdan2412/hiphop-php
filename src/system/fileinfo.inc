// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0
"finfo_open", T(Variant), S(0), "options", T(Int64), "i:0;", "FILEINFO_NONE", S(0), "magic_file", T(String), "N;", "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.finfo-open.php )\n *\n * This function opens a magic database and returns its resource.\n *\n * @options    int     One or disjunction of more Fileinfo constants.\n * @magic_file string  Name of a magic database file, usually something\n *                     like /path/to/magic.mime. If not specified, the\n *                     MAGIC environment variable is used. If this variable\n *                     is not set either, /usr/share/misc/magic is used by\n *                     default. A .mime and/or .mgc suffix is added if\n *                     needed.\n *                     Passing NULL or an empty string will be equivalent\n *                     to the default value.\n *\n * @return     mixed   Returns a magic database resource on success or\n *                     FALSE on failure.\n */", 
"finfo_close", T(Boolean), S(0), "finfo", T(Object), NULL, NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.finfo-close.php )\n *\n * This function closes the resource opened by finfo_open().\n *\n * @finfo      resource\n *                     Fileinfo resource returned by finfo_open().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */", 
"finfo_set_flags", T(Boolean), S(0), "finfo", T(Object), NULL, NULL, S(0), "options", T(Int64), NULL, NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.finfo-set-flags.php )\n *\n * This function sets various Fileinfo options. Options can be set also\n * directly in finfo_open() or other Fileinfo functions.\n *\n * @finfo      resource\n *                     Fileinfo resource returned by finfo_open().\n * @options    int     One or disjunction of more Fileinfo constants.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */", 
"finfo_file", T(Variant), S(0), "finfo", T(Object), NULL, NULL, S(0), "file_name", T(String), "N;", "null", S(0), "options", T(Int64), "i:0;", "FILEINFO_NONE", S(0), "context", T(Object), "N;", "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.finfo-file.php )\n *\n * This function is used to get information about a file.\n *\n * @finfo      resource\n *                     Fileinfo resource returned by finfo_open().\n * @file_name  string  Name of a file to be checked.\n * @options    int     One or disjunction of more Fileinfo constants.\n * @context    resource\n *                     For a description of contexts, refer to Stream\n *                     Functions/\n *\n * @return     mixed   Returns a textual description of the contents of the\n *                     filename argument, or FALSE if an error occurred.\n */", 
"finfo_buffer", T(Variant), S(0), "finfo", T(Object), NULL, NULL, S(0), "string", T(String), "N;", "null", S(0), "options", T(Int64), "i:0;", "FILEINFO_NONE", S(0), "context", T(Object), "N;", "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.finfo-buffer.php )\n *\n * This function is used to get information about a file.\n *\n * @finfo      resource\n *                     Fileinfo resource returned by finfo_open().\n * @string     string  Content of a file to be checked.\n * @options    int     One or disjunction of more Fileinfo constants.\n * @context    resource\n *                     For a description of contexts, refer to Stream\n *                     Functions/\n *\n * @return     mixed   Returns a textual description of the string\n *                     argument, or FALSE if an error occurred.\n */", 

#elif EXT_TYPE == 1
"FILEINFO_NONE", T(Int64),
"FILEINFO_SYMLINK", T(Int64),
"FILEINFO_MIME_TYPE", T(Int64),
"FILEINFO_MIME_ENCODING", T(Int64),
"FILEINFO_MIME", T(Int64),
"FILEINFO_COMPRESS", T(Int64),
"FILEINFO_DEVICES", T(Int64),
"FILEINFO_CONTINUE", T(Int64),
"FILEINFO_PRESERVE_ATIME", T(Int64),
"FILEINFO_RAW", T(Int64),

#elif EXT_TYPE == 2
"finfo", "", NULL, "__construct", T(Void), S(0), "options", T(Int64), "i:0;", "FILEINFO_NONE", S(0), "magic_file", T(String), "N;", "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/finfo.--construct.php )\n *\n * This function opens a magic database and returns its resource.\n *\n * @options    int     One or disjunction of more Fileinfo constants.\n * @magic_file string  Name of a magic database file, usually something\n *                     like /path/to/magic.mime. If not specified, the\n *                     MAGIC environment variable is used. If this variable\n *                     is not set either, /usr/share/misc/magic is used by\n *                     default. A .mime and/or .mgc suffix is added if\n *                     needed.\n *                     Passing NULL or an empty string will be equivalent\n *                     to the default value.\n */", S(16384),"__destruct", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/finfo.--destruct.php )\n *\n *\n * @return     mixed\n */", S(16384),"set_flags", T(Boolean), S(0), "options", T(Int64), NULL, NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/finfo.set-flags.php )\n *\n * This function sets various Fileinfo options. Options can be set also\n * directly in finfo_open() or other Fileinfo functions.\n *\n * @options    int     One or disjunction of more Fileinfo constants.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */", S(16384),"file", T(Variant), S(0), "file_name", T(String), "N;", "null", S(0), "options", T(Int64), "i:0;", "FILEINFO_NONE", S(0), "context", T(Object), "N;", "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/finfo.file.php )\n *\n * This function is used to get information about a file.\n *\n * @file_name  string  Name of a file to be checked.\n * @options    int     One or disjunction of more Fileinfo constants.\n * @context    resource\n *                     For a description of contexts, refer to Stream\n *                     Functions/\n *\n * @return     mixed   Returns a textual description of the contents of the\n *                     filename argument, or FALSE if an error occurred.\n */", S(16384),"buffer", T(Variant), S(0), "string", T(String), "N;", "null", S(0), "options", T(Int64), "i:0;", "FILEINFO_NONE", S(0), "context", T(Object), "N;", "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/finfo.buffer.php )\n *\n * This function is used to get information about a file.\n *\n * @string     string  Content of a file to be checked.\n * @options    int     One or disjunction of more Fileinfo constants.\n * @context    resource\n *                     For a description of contexts, refer to Stream\n *                     Functions/\n *\n * @return     mixed   Returns a textual description of the string\n *                     argument, or FALSE if an error occurred.\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.finfo.php )\n *\n * Object oriented variant of fileinfo methods\n *\n */", 
#elif EXT_TYPE == 3

#endif
