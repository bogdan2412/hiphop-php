/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010- Facebook, Inc. (http://www.facebook.com)         |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_FILEINFO_H__
#define __EXTPROFILE_FILEINFO_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_fileinfo.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline Variant x_finfo_open(int64 options = k_FILEINFO_NONE, CStrRef magic_file = null_string) {
  FUNCTION_INJECTION_BUILTIN(finfo_open);
  return f_finfo_open(options, magic_file);
}

inline bool x_finfo_close(CObjRef finfo) {
  FUNCTION_INJECTION_BUILTIN(finfo_close);
  return f_finfo_close(finfo);
}

inline bool x_finfo_set_flags(CObjRef finfo, int64 options) {
  FUNCTION_INJECTION_BUILTIN(finfo_set_flags);
  return f_finfo_set_flags(finfo, options);
}

inline Variant x_finfo_file(CObjRef finfo, CStrRef file_name = null_string, int64 options = k_FILEINFO_NONE, CObjRef context = null_object) {
  FUNCTION_INJECTION_BUILTIN(finfo_file);
  return f_finfo_file(finfo, file_name, options, context);
}

inline Variant x_finfo_buffer(CObjRef finfo, CStrRef string = null_string, int64 options = k_FILEINFO_NONE, CObjRef context = null_object) {
  FUNCTION_INJECTION_BUILTIN(finfo_buffer);
  return f_finfo_buffer(finfo, string, options, context);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_FILEINFO_H__
